<%@page import="example.Festival"%>
<%@page import="example.Festival_DBManager"%>
<%@ page contentType = "text/html;charset=utf-8" %>
<%@ page import="java.util.ArrayList"%>

<%
    Festival_DBManager fsdm= new Festival_DBManager();
    ArrayList<Festival> list = fsdm.SelectAllFestival();
    int[] CountArray = new int[12];
    for(int i =0;i<list.size();i++)
    {
    	CountArray[Integer.parseInt((""+list.get(i).getFes_start()).substring(5,7))]++;
    }
//     (""+list.get(i).getFes_start()).substring(5,7)
%>

<!DOCTYPE html>
<html>
    <meta charset="utf-8">
    <link rel="stylesheet" type="text/css" href="css/styles.css"/>
    <script type="text/javascript" src="d3/d3.js"></script>
    <script type="text/javascript">   
        // 자동으로 div 태그 추가+ 클래스
    function addDiv(){
        d3.select("body")
            .append("div")
                .attr("class","blue box")
    }  
    </script>
<head>
<meta charset="UTF-8">
<title>달력 테스트</title>
</head>
<body>

    <div id="secondArea" class="container"></div>
   
            <!-- 처음 박스 색 -->
    <script type="text/javascript">
        d3.selectAll("div") // <-- A
            .attr("class", "red box"); // <-- B
            
            
    </script>
    <div>
		<div id="month1" class="box"></div>
   	 	<div id="month2" class="box"></div>
    	<div id="month3" class="box"></div>
    	<div id="month4" class="box"></div>
    	<div id="month5" class="box"></div>
    	<div id="month6" class="box"></div>
    	<div id="month7" class="box"></div>
    	<div id="month8" class="box"></div>
    	<div id="month9" class="box"></div>
    	<div id="month10" class="box"></div>
    	<div id="month11" class="box"></div>
    	<div id="month12" class="box"></div>
	</div>
        <!-- 실제 데이터 삽입 -->
    <script type="text/javascript">
        var data=[];
      
        <%
        for(int i = 0; i <list.size();i++){
            %>        
//                 addDiv();
                data.push([{ fes_idx:<%=list.get(i).getFes_idx()%> , fes_name:'<%=list.get(i).getFes_name()%>' , fes_start:'<%=list.get(i).getFes_start()%>',fes_end:'<%=list.get(i).getFes_end()%>'}]);
            <%
        }
        %>
        
        var monthFes=[];
        <%
        for(int i = 0; i <12;i++){
            %>        
                monthFes.push([<%=CountArray[i]%>]);
            <%
        }
        %>
        
        function render(data,selectedTag) { // <- B
            // Enter
            d3.select(selectedTag).selectAll("div.h-bar") // <- C
                .data(data) // <- D
                .enter() // <- E
                    .append("div") // <- F
                        .attr("class", "h-bar")
                    .append("span"); // <- G

         // Update
         d3.select(selectedTag).selectAll("div.h-bar")
            .data(data) 
                .style("width", function (d) { // <- H
                    console.log(d[0].fes_idx)
                    return (d[0].fes_idx * 30) + "px";
                })
                .select("span") // <- I
                    .text(function (d) {
                        return d[0].fes_name;
                    }); 
            
            
            
    }
        
    function drawFestival(data,selectedTag) { // <- B
            // Enter
            d3.select(selectedTag).selectAll("div.h-bar") // <- C
                .data(data) // <- D
                .enter() // <- E
                    .append("div") // <- F
                        .attr("class", "h-bar")
                    .append("span"); // <- G

         // Update
         d3.select(selectedTag).selectAll("div.h-bar")
            .data(data) 
                .style("width", function (d) { // <- H
//                     console.log(d[0].fes_idx)
                    return 20+(d * 10) + "px";
                })
                .select("span") // <- I
                    .text(function (d) {
                        return d+"개";
                    }); 
            
            
            
    }
//     drawFestival(monthFes,"#secondArea");
<%--      <%for(int i =0; i <12;i++){%> --%>
<%--      	drawFestival(monthFes[<%=i%>],"#month<%=i+1%>");  --%>
<%--      <%}%> --%>
    
// 	render(data,"#secondArea");
</script>

<script type="text/javascript">
    function pieChart() {
        var _chart = {};

        var _width = 500, _height = 500,
                _data = [],
                _colors = d3.scale.category20(),
                _svg,
                _bodyG,
                _pieG,
                _radius = 200,
                _innerRadius = 100;

        _chart.render = function () {
            if (!_svg) {
                _svg = d3.select("body").append("svg")
                        .attr("height", _height)
                        .attr("width", _width);
            }

            renderBody(_svg);
        };

        function renderBody(svg) {
            if (!_bodyG)
                _bodyG = svg.append("g")
                        .attr("class", "body");

            renderPie();
        }

        function renderPie() {
            var pie = d3.layout.pie() // <-A
                    .sort(function (d) {
                        return d.id;
                    })
                    .value(function (d) {
                        return d.value;
                    });

            var arc = d3.svg.arc()
                    .outerRadius(_radius)
                    .innerRadius(_innerRadius);

            if (!_pieG)
                _pieG = _bodyG.append("g")
                        .attr("class", "pie")
                        .attr("transform", "translate(" 
                            + _radius 
                            + "," 
                            + _radius + ")");

            renderSlices(pie, arc);

            renderLabels(pie, arc);
        }

        function renderSlices(pie, arc) {
            var slices = _pieG.selectAll("path.arc")
                    .data(pie(_data)); // <-B

            slices.enter()
                    .append("path")
                    .attr("class", "arc")
                    .attr("fill", function (d, i) {
                        return _colors(i);
                    });

            slices.transition()
                    .attrTween("d", function (d) {
                        var currentArc = this.__current__; // <-C

                        if (!currentArc)
                            currentArc = {startAngle: 0, 
                                            endAngle: 0};

                        var interpolate = d3.interpolate(
                                            currentArc, d);
                                            
                        this.__current__ = interpolate(1);//<-D
                        
                        return function (t) {
                            return arc(interpolate(t));
                        };
                    });
        }

        function renderLabels(pie, arc) {
            var labels = _pieG.selectAll("text.label")
                    .data(pie(_data)); // <-E

            labels.enter()
                    .append("text")
                    .attr("class", "label");

            labels.transition()
                    .attr("transform", function (d) {
                        return "translate(" 
                            + arc.centroid(d) + ")"; // <-F
                    })
                    .attr("dy", ".35em")
                    .attr("text-anchor", "middle")
                    .text(function (d) {
                        return d.data.id;
                    });
        }

        _chart.width = function (w) {
            if (!arguments.length) return _width;
            _width = w;
            return _chart;
        };

        _chart.height = function (h) {
            if (!arguments.length) return _height;
            _height = h;
            return _chart;
        };

        _chart.colors = function (c) {
            if (!arguments.length) return _colors;
            _colors = c;
            return _chart;
        };

        _chart.radius = function (r) {
            if (!arguments.length) return _radius;
            _radius = r;
            return _chart;
        };

        _chart.innerRadius = function (r) {
            if (!arguments.length) return _innerRadius;
            _innerRadius = r;
            return _chart;
        };

        _chart.data = function (d) {
            if (!arguments.length) return _data;
            _data = d;
            return _chart;
        };

        return _chart;
    }

    function randomData() {
        return Math.random() * 9 + 1;
    }

    function update() {
        for (var j = 0; j < data.length; ++j)
            data[j].value = randomData();

        chart.render();
    }

    var numberOfDataPoint = 6,
            data = [];

    data = d3.range(numberOfDataPoint).map(function (i) {
        return {id: i, value: randomData()};
    });

    var chart = pieChart()
            .radius(200)
            .innerRadius(100)
            .data(data);

    chart.render();
</script>

<div class="control-group">
    <button onclick="update()">Update</button>
</div>


</body>
</html>